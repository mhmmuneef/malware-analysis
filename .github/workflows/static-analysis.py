import os
import hashlib
import pefile
import yara

def calculate_hash(file_path):
    hash_sha256 = hashlib.sha256()
    with open(file_path, 'rb') as file:
        while chunk := file.read(4096):
            hash_sha256.update(chunk)
    return hash_sha256.hexdigest()

def extract_pe_info(file_path):
    try:
        pe = pefile.PE(file_path)
        pe_info = {
            "Entry Point": hex(pe.OPTIONAL_HEADER.AddressOfEntryPoint),
            "Image Base": hex(pe.OPTIONAL_HEADER.ImageBase),
            "Number of Sections": pe.FILE_HEADER.NumberOfSections,
            "Timestamp": pe.FILE_HEADER.TimeDateStamp,
        }
        return pe_info
    except pefile.PEFormatError:
        return "Not a valid PE file"

def static_analysis(target_dir, yara_rules_path):
    yara_rules = yara.compile(filepath=yara_rules_path)

    for root, _, files in os.walk(target_dir):
        for file in files:
            file_path = os.path.join(root, file)
            print(f"Analyzing {file_path}...")

            # Calculate hash
            file_hash = calculate_hash(file_path)
            print(f"SHA256 Hash: {file_hash}")

            # Extract PE metadata
            pe_info = extract_pe_info(file_path)
            print(f"PE Information: {pe_info}")

            # YARA scanning
            matches = yara_rules.match(file_path)
            if matches:
                print(f"YARA Matches: {matches}")
            else:
                print("No YARA matches found")

if __name__ == "__main__":
    static_analysis("./samples", "./signatures/rules.yar")
